<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../../entries2html.xsl" ?>
<entry name="accordion" namespace="fn" type="Widget" widgetnamespace="ui">
	<desc>
		Expand one section of content at a time in a vertical container.
		Each section has a header that can be clicked or hovered to toggle visibility with an optional animation.
	</desc>
	<longdesc>
		<p>The markup of your accordion container needs pairs of headers and content panels:</p>

		<pre>&lt;div id="accordion"&gt;
		    &lt;h3&gt;&lt;a href="#"&gt;First header&lt;/a&gt;&lt;/h3&gt;
		    &lt;div&gt;First content&lt;/div&gt;
		    &lt;h3&gt;&lt;a href="#"&gt;Second header&lt;/a&gt;&lt;/h3&gt;
		    &lt;div&gt;Second content&lt;/div&gt;
		&lt;/div&gt;</pre>

		<p>If you use a different element for the header, specify the header-option with an appropriate selector, eg. header: 'a.header'. The content element must be always next to its header.</p>
		<p>If you have links inside the accordion content and use a-elements as headers, add a class to them and use that as the header, eg. header: 'a.header'.</p>
		<p>Use activate(Number) to change the active content programmatically.</p>

		<h4>NOTE: If you want multiple sections open at once, don't use an accordion</h4>
		<p>An accordion doesn't allow more than one content panel to be open at the same time, and it takes a lot of effort to do that. If you are looking for a widget that allows more than one content panel to be open, don't use this. Usually it can be written with a few lines of jQuery instead, something like this:</p>

		<pre>jQuery(document).ready(function(){
			$('.accordion .head').click(function() {
				$(this).next().toggle();
				return false;
			}).next().hide();
		});</pre>

		<p>Or animated:</p>

		<pre>jQuery(document).ready(function(){
			$('.accordion .head').click(function() {
				$(this).next().toggle('slow');
				return false;
			}).next().hide();
		});</pre>
	</longdesc>
	<created>1.0</created>
	<options>
		<option name="active" default="0">
			<desc>Select the active (open) panel by zero-based index. Negative values select backward from the last. When collapsible: true, active: false closees the accordion, otherwise setting active to false will have no effect.</desc>
			<type name="Integer" />
			<type name="Boolean" />
		</option>
		<option name="animated" type="String|Boolean" default="slide">
			<desc>Choose your favorite animation, or disable them (set to false). In addition to the default, 'bounceslide' and all defined easing methods are supported ('bounceslide' requires UI Effects Core).</desc>
		</option>
		<option name="collapsible" type="Boolean" default="false">
			<desc>Whether all the sections can be closed at once. Allows collapsing the active section by the triggering event (click is the default).</desc>
		</option>
		<option name="event" type="String" default="click">
			<desc>The event on which to trigger the accordion. For hover, use 'mouseover'.</desc>
		</option>
		<option name="header" type="String" default="&#x3E; li &#x3E; :first-child, &#x3E; :not(li):even">
			<desc>Selector for the header element. Must be a selector that applies to the accordion container element, via .find(). The default covers both ui/li accordions, as well as flat structures like dl/dt/dd</desc>
		</option>
		<option name="heightStyle" type="String" default="auto">
			<desc>
				<p>Controls the height of the accordion and each panel.</p>
				<p>Possible values:</p>
				<dl>
					<dt>auto</dt>
						<dd>all panels will be set to the height of the tallest panel</dd>
					<dt>fill</dt>
						<dd>expand to the available height based on the accordion's parent height</dd>
					<dt>content</dt>
						<dd>each panel will only be as tall as its content</dd>
				</dl>
			</desc>
		</option>
		<option name="icons" type="Object" default="{ &#x22;header&#x22;: &#x22;ui-icon-triangle-1-e&#x22;, &#x22;headerSelected&#x22;: &#x22;ui-icon-triangle-1-s&#x22; }">
			<desc>Icons to use for headers. Icons may be specified for 'header' and 'headerSelected', and we recommend using the icons native to the jQuery UI CSS Framework manipulated by <a href="http://www.themeroller.com/">jQuery UI ThemeRoller</a></desc>
		</option>
	</options>
	<methods>
		<!-- TODO add more methods, and actual signatures and types and everything -->
		<method name="refresh">
			<desc>
				Recomputes panel dimensions.
			</desc>
		</method>
		<method name="explode">
			<desc>
				Make the accordion explode
			</desc>
			<argument name="pieces" type="Number">
				<desc>Number of pieces to explode into</desc>
			</argument>
			<argument name="implode" type="Boolean" optional="true">
				<desc>Set to true to make the accordion implode. Leave default-false to explode.</desc>
			</argument>
		</method>
	</methods>
	<events>
		<event name="beforeActivate" type="accordionbeforeactive">
			<desc>
				Triggered directly after a panel is activated. Can be cancelled to prevent the panel from activating.
			</desc>
			<argument name="event" type="Event">
				<desc>
					Type depends on event option. Commonly would be click or mouseover.
				</desc>
			</argument>
			<argument name="ui" type="Object">
				<desc>
					Extra event data for the ui accordion beforeActivate event
				</desc>
				<!-- TODO describe properties -->
				<property name="newContent" type="jQuery" />
				<property name="newHeader" type="jQuery" />
				<property name="oldContent" type="jQuery" />
				<property name="oldHeader" type="jQuery" />
			</argument>
		</event>
		<event name="activate" type="accordionactivate">
			<desc>
				Triggered after the accordion panel has be activated (after animation completes).
			</desc>
			<argument name="event" type="Event" null="true">
			</argument>
			<argument name="ui" type="Object">
				<desc>
					Extra event data for the ui accordion activate event
				</desc>
				<property name="newContent" type="jQuery">
					<desc>Refers to the activated content panel</desc>
				</property>
				<property name="newHeader" type="jQuery" />
				<property name="oldContent" type="jQuery" />
				<property name="oldHeader" type="jQuery" />
			</argument>
		</event>
	</events>
	<!-- TODO wrap with 'examples'? -->
	<example>
        <desc>Initialize an accordion with default options.</desc>
        <code><![CDATA[
		$("#accordion").accordion();
	]]></code>
		<html><![CDATA[<div id="accordion">
		<h3><a href="#">Section 1</a></h3>
		<div>
			<p>
			Mauris mauris ante, blandit et, ultrices a, suscipit eget, quam. Integer
			</p>
		</div>
		<h3><a href="#">Section 2</a></h3>
		<div>
			<p>
			Sed non urna. Donec et ante. Phasellus eu ligula. Vestibulum sit amet
			purus. Vivamus hendrerit, dolor at aliquet laoreet, mauris turpis porttitor
			</p>
		</div>
		<h3><a href="#">Section 3</a></h3>
		<div>
			<p>
			Nam enim risus, molestie et, porta ac, aliquam ac, risus. Quisque lobortis.
			Phasellus pellentesque purus in massa. Aenean in pede. Phasellus ac libero
			</p>
			<ul>
				<li>List item one</li>
				<li>List item two</li>
				<li>List item three</li>
			</ul>
		</div>
	</div>]]></html>
	</example>
	<example>
        <desc>Initialize an accordion with default options.</desc>
        <code><![CDATA[
		$( "#accordion" ).accordion({
			heightStyle: "fill"
		});
	]]></code>
		<css><![CDATA[
		.accordion-container {
			padding: 10px;
			width: 350px;
			height: 220px;
		}
	]]></css>
		<html><![CDATA[<div class="accordion-container">
		<div id="accordion">
			<h3><a href="#">Section 1</a></h3>
			<div>
				<p>
				Mauris mauris ante, blandit et, ultrices a, suscipit eget, quam. Integer
				</p>
			</div>
			<h3><a href="#">Section 2</a></h3>
			<div>
				<p>
				Sed non urna. Donec et ante. Phasellus eu ligula. Vestibulum sit amet
				purus. Vivamus hendrerit, dolor at aliquet laoreet, mauris turpis porttitor
				</p>
			</div>
			<h3><a href="#">Section 3</a></h3>
			<div>
				<p>
				Nam enim risus, molestie et, porta ac, aliquam ac, risus. Quisque lobortis.
				Phasellus pellentesque purus in massa. Aenean in pede. Phasellus ac libero
				</p>
				<ul>
					<li>List item one</li>
					<li>List item two</li>
					<li>List item three</li>
				</ul>
			</div>
		</div>
	</div>]]></html>
	</example>
</entry>
